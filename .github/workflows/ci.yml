name: build
on:
  push:
jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: sigstore/cosign-installer@v3.3.0
        with:
          cosign-release: 'v2.2.2'
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Install system dependencies
        run: sudo apt-get install -y protobuf-compiler
      - name: Rust Build Cache
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: Swatinem/rust-cache@v2
      - name: Build (mvps-te)
        run: cargo build --locked --release -p mvps-te
      - name: Build (mvps-s3-gc)
        run: cargo build --locked --release -p mvps-s3-gc
      - name: Build (nbdstress)
        run: cargo build --locked --release -p nbdstress
      - name: Collect binaries
        run: |
          set -e
          mkdir build
          cd build
          cp ../target/release/mvps-te ./
          cp ../target/release/mvps-s3-gc ./
          cp ../target/release/nbdstress ./
          find . -type f -exec sha256sum '{}' ';'
      - name: Sign artifact
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          set -e
          cosign sign-blob --yes --bundle build/mvps-te.cosign-bundle build/mvps-te
          cosign sign-blob --yes --bundle build/mvps-s3-gc.cosign-bundle build/mvps-s3-gc
          cosign sign-blob --yes --bundle build/nbdstress.cosign-bundle build/nbdstress
      - name: Push binaries
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./build
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Install system dependencies
        run: sudo apt-get install -y protobuf-compiler
      - name: Rust Build Cache
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --locked
  nbdstress:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    needs:
    - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch binaries
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./build
      - name: Run it
        env:
          MVPS_TE_JWT_SECRET: github-actions
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          S3_ENDPOINT: ${{ secrets.R2_ENDPOINT }} 
        run: |
          set -e
          export MVPS_TE_ROOT_KEY=xchacha20poly1305:$(openssl rand -base64 32)
          chmod +x ./build/mvps-te ./build/mvps-s3-gc ./build/nbdstress
          export RUST_LOG=info
          mkdir /tmp/mvps-buffer
          ./build/mvps-te \
            --listen 127.0.0.1:10809 \
            --image-store s3 \
            --image-store-s3-bucket mvps-github-actions \
            --image-store-s3-prefix ci-$(date -u "+%Y%m%d-%H%M%S")-$(openssl rand -hex 16)/ \
            --buffer-store-path /tmp/mvps-buffer &
          ./build/nbdstress \
            --export-name eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZV9pZCI6IlNUUkVTUy0wMS5tdnBzLWltYWdlIiwiaW1hZ2Vfc2l6ZSI6MjE0NzQ4MzY0OCwicGFnZV9zaXplX2JpdHMiOjEyLCJleHAiOjMwMDAwMDAwMDAsImNsaWVudF9pZCI6ImM5ZWZkOTZjLWRhNTktNDM1MS1iMzExLTM1MTI5NWZhOThlMiJ9.HjCMh3inem9WFLmPy0HOJlefD1dFxcH9YMqOLsz6R-E \
            --remote 127.0.0.1:10809 \
            --write-percentage 0.2 --reconnect-interval-ms 10000 \
            --stop-after-reads 2000000
  release:
    needs:
    - build
    - test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: build
        path: ./build
    - uses: softprops/action-gh-release@v1
      with:
        files: |
          build/mvps-te
          build/mvps-te.cosign-bundle
          build/mvps-s3-gc
          build/mvps-s3-gc.cosign-bundle
          build/nbdstress
          build/nbdstress.cosign-bundle
        prerelease: true
